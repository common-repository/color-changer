
(function ($) {
	
	window.tansa = {};
	var isTinymceVersion3 = tinyMCE.majorVersion <= 3;
	var tansaLoaderScriptInterval;
	var loadingMenuTitle = 'Red';
	var loadingMenu = { text: loadingMenuTitle,  title: loadingMenuTitle };
	var tinymce4ColorChangerButtonCreation = {
        /**
         * Initializes the plugin, this will be executed after the plugin has been created.
         * This call is done before the editor instance has finished it's initialization so use the onInit event
         * of the editor instance to intercept that event.
         *
         * @param {tinymce.Editor} ed Editor instance that the plugin is initialized in.
         * @param {string} url Absolute URL to where the plugin is located.
         */
        init:function (ed, url) {
            var t = this;
            var editor = ed;
			
			 // Register buttons
            ed.addButton('colorChangerButton', {
                title : 'Change Color',
                id: 'colorChangerButton',
                image : url + '/img/colorChanger.png',
                type: 'button',
                onclick : function(evt) {
                	t.changeColor();
                }
            });
        },
			
		changeColor:function() {
			tinyMCE.activeEditor.getBody().style.backgroundColor = getRandomColor();
		},
    };
	
	var tinymce3ColorChangerButtonCreation = {
		 createControl: function(n, cm) {
			 var baseURL = tinyMCE.baseURL;
			
			  var t = this;
              switch (n) {
                case 'colorChangerButton':
                    var colorChangerButton = cm.createButton('colorChangerButton', {
						title : 'Change Color',
						id: 'colorChangerButton',
						image : url + '/img/colorChanger.png',
                        icons : false
                    });

                    return colorChangerButton;
                }

                return null;
        }
	};
	
	var result = {
		
        /**
         * Returns information about the plugin as a name/value array.
         * The current keys are longname, author, authorurl, infourl and version.
         *
         * @return {Object} Name/value array containing information about the plugin.
         */
        getInfo:function () {
            return {
                longname:'Color Changer',
                author:'Rahul Chavan',
                version:"1.0"
            };
        }
    };
	
    function extend(a, b){
        for(var key in b)
            if(b.hasOwnProperty(key))
                a[key] = b[key];
        return a;
    }
	
	function getRandomColor() {
		var letters = '0123456789ABCDEF';
		var color = '#';
		for (var i = 0; i < 6; i++) {
		color += letters[Math.floor(Math.random() * 16)];
		}
		return color;
	}
    
    result = extend(result, (isTinymceVersion3 ? tinymce3ColorChangerButtonCreation : tinymce4ColorChangerButtonCreation));
	tinymce.create('tinymce.plugins.ColorChanger', result);
    tinymce.PluginManager.add('colorChanger', tinymce.plugins.ColorChanger);

})(window.$ || window.jQuery || window.tansaJQuery || window.sourceDocJquery);
